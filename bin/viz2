#!/usr/bin/python

from glimpse.models.viz2 import *
from glimpse.backends.cython_backend import CythonBackend
from glimpse.backends.scipy_backend import ScipyBackend
import Image
import os
import sys

def MakeDirLogger(dname):
  def logger(**args):
    for key, value in args.items():
      fname = "%s.dat" % os.path.join(dname, key)
      util.Store(value, fname)
  return logger

def MakeModel(backend = "cython", params_fname = None):
  mod_name = "%sBackend" % backend.capitalize()
  backend = eval("%s()" % mod_name)
  params = Viz2Params()
  if params_fname != None:
    params.LoadFromFile(params_fname)
  params.ApplyGlobalParams()
  model = Viz2Model(backend, params)
  return model

def main():
  backend = "cython"
  params_fname = None
  proto_fname = None
  rdir = None
  opts, args = util.GetOptions("b:o:p:r:", [])
  for opt, arg in opts:
    if opt == '-b':
      backend = arg
    elif opt == '-o':
      params_fname = arg
    elif opt == '-p':
      proto_fname = arg
    elif opt == '-r':
      rdir = arg
  if len(args) < 2:
    sys.exit("usage: %s CMD IMAGE" % sys.argv[0])
  cmd, ifname = args[:2]
  args = args[2:]
  model = MakeModel(backend, params_fname)
  if rdir != None:
    model.logger = MakeDirLogger(rdir)
    model.logger(params = model.params)
  img = Image.open(ifname)
  if cmd.upper() == "IMPRINT":
    if len(args) < 1:
      sys.exit("usage: %s IMPRINT IMAGE NUM_PROTOS > PROTOS" % sys.argv[0])
    num_prototypes = int(args[0])
    protos, locations = model.ImprintPrototypes(img, num_prototypes)
    for loc in locations:
      print >>sys.stderr, ifname + " " + " ".join(map(str, loc))
    util.Store(np.array(protos), sys.stdout)
  elif cmd.upper() == "TRANSFORM":
    if proto_fname == None:
      sys.exit("Missing S2 prototypes")
    protos = util.Load(proto_fname)
    s1s, c1s = model.BuildThroughC1(img)
    it = model.BuildItFromC1(c1s, protos)
    #~ util.Store(it, sys.stdout)
  else:
    sys.exit("bad operation '%s': should be one of IMPRINT or TRANSFORM" % cmd)

if __name__ == "__main__":
  main()
